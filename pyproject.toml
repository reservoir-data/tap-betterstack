[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = [
  "poetry-core==2.1.1",
  "poetry-dynamic-versioning==1.8.0",
]

[project]
name = "tap-betterstack"
description = "Singer tap for Better Stack, built with the Meltano SDK for Singer Taps."
readme = "README.md"
keywords = [
  "Better Stack",
  "ELT",
  "singer.io",
]
license = "Apache-2.0"
license-files = [ "LICENSE" ]
authors = [ { name = "Edgar Ramírez-Mondragón", email = "edgarrm358@gmail.com" } ]
requires-python = ">=3.9"
classifiers = [
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
]
dynamic = [
  "version",
]
dependencies = [
  "singer-sdk~=0.44.2",
]
urls.Documentation = "https://github.com/edgarrmondragon/tap-betterstack#readme"
urls.Homepage = "https://github.com/edgarrmondragon/tap-betterstack"
urls.Repository = "https://github.com/edgarrmondragon/tap-betterstack"
scripts."tap-betterstack" = "tap_betterstack.tap:TapBetterStack.cli"

[tool.poetry]
requires-poetry = ">=2.0"
version = "0.0.0"

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = [ "plugin" ] }
poetry-plugin-export = ">=1.8"

[tool.poetry.group.dev.dependencies]
mypy = ">=1.11.1"
singer-sdk = { version = "*", extras = [
  "testing",
] }
types-requests = "*"

[tool.poetry-dynamic-versioning]
enable = true
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- elif revision is not none -%}
        {{ serialize_pep440(base, stage, revision + 1, dev=distance, metadata=[commit]) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=distance, metadata=[commit]) }}
    {%- endif -%}
"""
metadata = true
style = "pep440"
vcs = "git"

[tool.ruff]
line-length = 88
src = [
  "tap_betterstack",
  "tests",
]
lint.select = [
  "ALL",
]
lint.ignore = [
  "COM812", # missing-trailing-comma
  "DJ",     # flake8-django
  "FIX002", # line-contains-todo
  "ISC001", # single-line-implicit-string-concatenation
]
lint.per-file-ignores."noxfile.py" = [
  "ANN",
]
lint.per-file-ignores."tests/*" = [
  "ANN201", # missing-return-type-public-function
  "S101",   # assert
  "SLF001", # private-member-access
]
lint.unfixable = [
  "ERA001", # commented-out-code
]
lint.flake8-annotations.allow-star-arg-any = true
lint.isort.known-first-party = [
  "tap_betterstack",
]
lint.isort.required-imports = [
  "from __future__ import annotations",
]
lint.pydocstyle.convention = "google"

[tool.pyproject-fmt]
max_supported_python = "3.14"

[tool.pytest.ini_options]
addopts = "-vvv"

[tool.mypy]
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "backoff.*",
]
